services:
  # NGINX proxy server
  nginx-proxy:
    build: nginx
    restart: always
    volumes:
      - ./nginx/default.conf:/tmp/default.conf
    environment: 
      - FLASK_SERVER_ADDR=flask-app:8000
    ports:
      - "80:80"
    depends_on:
      - flask-app
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/health-check || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    command: /app/start.sh

  # Flask APP
  flask-app:
    build: flask
    restart: always
    ports: 
      - '8000:8000'
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8000/flask-health-check || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    command: gunicorn -w 3 -t 60 -b 0.0.0.0:8000 app:app

  # Splunk Enterprise server:
  #splunk:
  #  image: splunk/splunk:latest
  #  container_name: splunk
  #  environment:
  #    - SPLUNK_START_ARGS=--accept-license
  #    - SPLUNK_HEC_TOKEN=00000000-0000-0000-0000-0000000000000
  #    - SPLUNK_PASSWORD=changeme
  #  ports:
  #    - 18000:8000
  #  healthcheck:
  #    test: [ 'CMD', 'curl', '-f', 'http://localhost:8000' ]
  #    interval: 5s
  #    timeout: 5s
  #    retries: 20
  #  volumes:
  #    - ./splunk.yml:/tmp/defaults/default.yml
  #    - /opt/splunk/var
  #    - /opt/splunk/etc
  #  depends_on:
  #    - amq-demo-broker

  # OpenTelemetry Collector
  #otelcollector:
  #  image: quay.io/signalfx/splunk-otel-collector:0.71.0
  #  container_name: otelcollector
  #  command: ["--config=/etc/otel-collector-config.yml", "--set=service.telemetry.logs.level=debug"]
  #  volumes:
  #    - ./otel-collector-config.yml:/etc/otel-collector-config.yml
  #    - ./logs:/logs
  #    - ./checkpoint:/checkpoint
  #  depends_on:
  #    splunk:
  #      condition: service_healthy